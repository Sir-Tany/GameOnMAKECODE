{"entries":[{"timestamp":1737995279737,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let gravity = 0\nbasic.forever(function () {\n    game.createSprite(2, gravity)\n    \n    input.onButtonPressed(Button.A, function(){\n       gravity++ \n    })\n    while (gravity > 0 && gravity < 5){\n    gravity--\n    }\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":219,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":228,"start2":228,"length1":32,"length2":31}]}]},{"timestamp":1737995704049,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"y = "],[-1,"6"],[1,"0"],[0,"\nbas"]],"start1":10,"start2":10,"length1":9,"length2":9},{"diffs":[[0,"    "],[-1,"input.onButtonPressed(Button)\n    led.plot(2, gravity)"],[1,"game.createSprite(2, gravity)\n    \n    input.onButtonPressed(Button.A, function(){\n       gravity++ \n    })\n    while (gravity > 0 && gravity < 5){\n    gravity--\n    }"],[0,"\n})\n"]],"start1":44,"start2":44,"length1":62,"length2":175}]}]},{"timestamp":1737996303094,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"let "],[-1,"y = 4\nlet x = 2\nlet m = "],[1,"gravity = 6"],[0,"\nbas"]],"start1":0,"start2":0,"length1":32,"length2":19},{"diffs":[[0,") {\n"],[-1,"    led.plot(x,y)\n"],[0,"    "]],"start1":40,"start2":40,"length1":26,"length2":8},{"diffs":[[0,"tton"],[-1,".A, function(){\n "],[1,")\n"],[0,"    "],[-1,"   "],[0,"led."],[-1,"un"],[0,"plot("],[-1,"x, y)\n        y-=2\n        if (y > 0 && y < 4) {\n            pause(200)\n            led.unplot(x, y)\n            y+=2\n        }\n    })\n    led.plot\n"],[1,"2, gravity)"],[0,"\n})\n"]],"start1":72,"start2":72,"length1":191,"length2":34}]}]},{"timestamp":1737996900205,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"m = "],[-1,"5\nfunction monster() {\n    led.unplot(m, 4)\n    m--\n    led.plot(m, 4)\n    pause(500)\n    if (m < 0){\n        m=4\n    }\n}\n"],[0,"\nbas"]],"start1":24,"start2":24,"length1":130,"length2":8},{"diffs":[[0,",y)\n"],[-1,"    led.plot(m,4)\n    monster()\n"],[0,"    "]],"start1":71,"start2":71,"length1":40,"length2":8},{"diffs":[[0,"\n    })\n"],[1,"    led.plot\n\n"],[0,"})\n"]],"start1":269,"start2":269,"length1":11,"length2":25}]}]},{"timestamp":1737997810625,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"      m="],[-1,"5"],[1,"4"],[0,"\n    }\n}"]],"start1":132,"start2":132,"length1":17,"length2":17}]}]},{"timestamp":1737997834358,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  m-"],[-1,"=0.09"],[1,"-"],[0,"\n   "]],"start1":74,"start2":74,"length1":13,"length2":9},{"diffs":[[0,".plot(m, 4)\n"],[1,"    pause(500)\n"],[0,"    if (m < "]],"start1":87,"start2":87,"length1":24,"length2":39},{"diffs":[[0,"m < "],[-1,"-1"],[1,"0"],[0,"){\n "]],"start1":122,"start2":122,"length1":10,"length2":9},{"diffs":[[0,"ot(m,4)\n"],[1,"    monster()\n"],[0,"    inpu"]],"start1":207,"start2":207,"length1":16,"length2":30},{"diffs":[[0," y+="],[-1,"1\n            pause(500)\n            led.unplot(x,y)\n            y+=1\n        }\n    })\n    monster()\n    if "],[1,"2\n        }\n    })"],[0,"\n})\n"]],"start1":408,"start2":408,"length1":116,"length2":26}]}]},{"timestamp":1737998132906,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," }\n}"],[-1,"\ndeath(){\n    if (led.point(2, 4)== 0 && led.point ())\n}"],[0,"\n\nba"]],"start1":135,"start2":135,"length1":64,"length2":8},{"diffs":[[0,"nster()\n"],[1,"    if \n"],[0,"})\n"]],"start1":481,"start2":481,"length1":11,"length2":19}]}]},{"timestamp":1737998719707,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    }\n}\n"],[-1,"function "],[0,"death(){"]],"start1":132,"start2":132,"length1":25,"length2":16},{"diffs":[[0,", 4)"],[-1," "],[0,"== "],[-1,"false"],[1,"0"],[0," && "]],"start1":168,"start2":168,"length1":17,"length2":12},{"diffs":[[0,"nt ("],[-1,"1,4) == true){   \n        for (let i = 0; i < 5; i++) {\n            \n        }\n    }"],[1,"))"],[0,"\n}\n\n"]],"start1":187,"start2":187,"length1":92,"length2":10}]}]},{"timestamp":1737999312551,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"= 5\n"],[-1,"let a = 0\n"],[0,"func"]],"start1":26,"start2":26,"length1":18,"length2":8},{"diffs":[[0,"true"],[-1," && led.point (2,2) == false ){   \n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n    basic.showLeds(`\n    # . . . #\n    . # . # .\n    . . # . .\n    . # . # .\n    # . . . #\n    `)\n    a=1\n    }\n}\n\nbasic.forever(function () {\n    if (a==0){\n        all()\n    }\n    function all"],[1,"){   \n        for (let i = 0; i < 5; i++) {\n            \n        }\n    }\n}\n\nbasic.forever(function"],[0," () "]],"start1":213,"start2":213,"length1":335,"length2":106},{"diffs":[[0,"          pause("],[-1,"5"],[1,"2"],[0,"00)\n            "]],"start1":475,"start2":475,"length1":33,"length2":33},{"diffs":[[0,"r()\n"],[-1,"    death()\n    }\n"],[0,"})\n"]],"start1":637,"start2":637,"length1":25,"length2":7}]}]},{"timestamp":1737999912070,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"lse "],[-1,"&& led.point (2,1) == false"],[0,"){  "]],"start1":252,"start2":252,"length1":35,"length2":8},{"diffs":[[0,"00)\n"],[-1,"            led.plot(x,2)\n"],[0,"    "]],"start1":731,"start2":731,"length1":34,"length2":8},{"diffs":[[0,"ed.unplot(x, y)\n"],[1,""],[0,"            y+=1"]],"start1":748,"start2":748,"length1":32,"length2":32},{"diffs":[[0,"00)\n"],[-1,"            led.plot(x, y + 1)\n"],[0,"    "]],"start1":800,"start2":800,"length1":39,"length2":8},{"diffs":[[0,"nplot(x,"],[-1,"0"],[1,"y"],[0,")\n      "]],"start1":821,"start2":821,"length1":17,"length2":17},{"diffs":[[0,"r()\n"],[1,""],[0,"    "],[-1,"//"],[0,"deat"]],"start1":876,"start2":876,"length1":14,"length2":12}]}]},{"timestamp":1738000488691,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"     pause(500)\n"],[1,"            led.plot(x,2)\n"],[0,"            led."]],"start1":746,"start2":746,"length1":32,"length2":58},{"diffs":[[0,"ed.unplot(x, y)\n"],[-1,""],[0,"            y+=1"]],"start1":801,"start2":801,"length1":32,"length2":32},{"diffs":[[0,"     pause(500)\n"],[1,"            led.plot(x, y + 1)\n"],[0,"            led."]],"start1":841,"start2":841,"length1":32,"length2":63},{"diffs":[[0,"ed.unplot(x,"],[-1,"y"],[1,"0"],[0,")\n          "]],"start1":901,"start2":901,"length1":25,"length2":25},{"diffs":[[0,"nster()\n"],[-1,""],[0,"    "],[1,"//"],[0,"death()\n"]],"start1":956,"start2":956,"length1":20,"length2":22}]}]},{"timestamp":1738000670163,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"//"],[0,"deat"]],"start1":907,"start2":907,"length1":10,"length2":8}]}]},{"timestamp":1738001669374,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    if ("],[1,"led.point(2, 4) == false && led.point (1,4) == true && led.point (2,2) == false && led.point (2,1) == false"],[0,"){   \n  "]],"start1":168,"start2":168,"length1":16,"length2":123}]}]},{"timestamp":1738001703802,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"   m-=0."],[-1,"1"],[1,"09"],[0,"\n    led"]],"start1":83,"start2":83,"length1":17,"length2":18},{"diffs":[[0,"if ("],[-1,"y == 4 && m == 2){"],[1,"){   "],[0,"\n   "]],"start1":172,"start2":172,"length1":26,"length2":13},{"diffs":[[0,"r()\n    "],[1,"//"],[0,"death()\n"]],"start1":796,"start2":796,"length1":16,"length2":18}]}]},{"timestamp":1738002298866,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"-=0."],[-1,"05"],[1,"1"],[0,"\n   "]],"start1":87,"start2":87,"length1":10,"length2":9},{"diffs":[[0,"if ("],[-1,"){\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . # . .\n    . . . . .\n    . . . . .\n    `)"],[1,"y == 4 && m == 2){"],[0,"\n   "]],"start1":171,"start2":171,"length1":108,"length2":26}]}]},{"timestamp":1738002743434,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    if ("],[-1,"led."],[0,"){\n    b"]],"start1":168,"start2":168,"length1":20,"length2":16}]}]},{"timestamp":1738007864607,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"led."],[-1,"point"],[0,"){\n "]],"start1":176,"start2":176,"length1":13,"length2":8}]}]},{"timestamp":1738007865551,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"oint"],[-1,"(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == true && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false){"],[1,"){\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . # . .\n    . . . . .\n    . . . . .\n    `)"],[0,"\n   "]],"start1":181,"start2":181,"length1":668,"length2":108}]}]},{"timestamp":1738008451410,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"= 0\n"],[-1,"let b = 4\n"],[0,"func"]],"start1":36,"start2":36,"length1":18,"length2":8},{"diffs":[[0,".05\n"],[-1,"    b-=0.05\n"],[0,"    "]],"start1":90,"start2":90,"length1":20,"length2":8},{"diffs":[[0,"if (m < "],[-1,"0"],[1,"-1"],[0,"){\n     "]],"start1":117,"start2":117,"length1":17,"length2":18},{"diffs":[[0,"    "],[-1,"led.plot(m,4)\n        led.unplot(m,4)\n        m=5\n        "],[1,"m=5"],[0,"\n   "]],"start1":134,"start2":134,"length1":66,"length2":11}]}]},{"timestamp":1738009028734,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"t a = 0\n"],[1,"let b = 4\n"],[0,"function"]],"start1":32,"start2":32,"length1":16,"length2":26},{"diffs":[[0,"ter() {\n    "],[-1,"//"],[0,"led.unplot(m"]],"start1":63,"start2":63,"length1":26,"length2":24},{"diffs":[[0," 4)\n    "],[-1,"//"],[0,"m-=0.05\n"]],"start1":88,"start2":88,"length1":18,"length2":16},{"diffs":[[0,"    "],[-1,"//"],[1,"b-=0.05\n    "],[0,"led."]],"start1":104,"start2":104,"length1":10,"length2":20},{"diffs":[[0,"    "],[-1,"m=5"],[1,"led.plot(m,4)\n        led.unplot(m,4)\n        m=5\n    "],[0,"    "]],"start1":155,"start2":155,"length1":11,"length2":62},{"diffs":[[0,",4)\n"],[-1,"    led.unplot(m, 4)\n    m -= 0.05\n    led.plot(m, 4)\n"],[0,"    "]],"start1":1252,"start2":1252,"length1":62,"length2":8}]}]},{"timestamp":1738009579548,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ter() {\n    "],[1,"//"],[0,"led.unplot(m"]],"start1":53,"start2":53,"length1":24,"length2":26},{"diffs":[[0," 4)\n    "],[1,"//"],[0,"m-=0.05\n"]],"start1":80,"start2":80,"length1":16,"length2":18},{"diffs":[[0,"m-=0.05\n    "],[1,"//"],[0,"led.plot(m, "]],"start1":90,"start2":90,"length1":24,"length2":26},{"diffs":[[0,"m < "],[-1,"-1){\n        led.plot(0,"],[0,"0)"],[1,"{"],[0,"\n   "]],"start1":127,"start2":127,"length1":34,"length2":11},{"diffs":[[0,"  m=5   "],[1," "],[0,"\n    }\n}"]],"start1":141,"start2":141,"length1":16,"length2":17},{"diffs":[[0,"}\n}\n"],[-1,"function all"],[1,"\nbasic.forever(function () {\n    if (a==0){\n        all()\n    }\n    function all "],[0,"() {"]],"start1":1063,"start2":1063,"length1":20,"length2":89},{"diffs":[[0," led.plot(x,"],[-1," "],[0,"y)\n"],[1,"    led.plot(m,4)\n    led.unplot(m, 4)\n    m -= 0.05\n    led.plot(m, 4)\n"],[0,"    input.on"]],"start1":1156,"start2":1156,"length1":28,"length2":99},{"diffs":[[0,".A, function"],[-1," "],[0,"()"],[-1," "],[0,"{\n        le"]],"start1":1275,"start2":1275,"length1":28,"length2":26},{"diffs":[[0,"       y"],[-1," "],[0,"-="],[-1," "],[0,"2\n      "]],"start1":1317,"start2":1317,"length1":20,"length2":18},{"diffs":[[0,"y)\n            y"],[-1," "],[0,"+="],[-1," "],[0,"1\n            pa"]],"start1":1408,"start2":1408,"length1":36,"length2":34},{"diffs":[[0,"   led.unplot(x,"],[-1," "],[0,"y)\n            y"]],"start1":1460,"start2":1460,"length1":33,"length2":32},{"diffs":[[0,"   y"],[-1," "],[0,"+="],[-1," "],[0,"1\n  "]],"start1":1488,"start2":1488,"length1":12,"length2":10},{"diffs":[[0,"r()\n"],[-1,"}\n\n\nbasic.forever(function () {\n    if (a==0){\n        all()\n    }\n    led.unplot(0, 0)\n    death()\n})"],[1,"    death()\n    }\n})\n"]],"start1":1523,"start2":1523,"length1":106,"length2":25}]}]},{"timestamp":1738010142481,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," < -1){\n"],[1,"        led.plot(0,0)\n"],[0,"        "]],"start1":122,"start2":122,"length1":16,"length2":38},{"diffs":[[0,"t(0,"],[-1," 0) == false, led.point(0,"],[0," 1) "]],"start1":209,"start2":209,"length1":34,"length2":8},{"diffs":[[0,"\n    })\n"],[1,"    monster()\n"],[0,"}\n\n\nbasi"]],"start1":1390,"start2":1390,"length1":16,"length2":30},{"diffs":[[0,"    "],[1,"}\n"],[0,"    "],[-1,"monster()\n    }"],[1,"led.unplot(0, 0)"],[0,"\n   "]],"start1":1473,"start2":1473,"length1":27,"length2":30}]}]},{"timestamp":1738010864939,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    m=5 "],[-1,"."],[0,"  \n    }"]],"start1":134,"start2":134,"length1":17,"length2":16}]}]},{"timestamp":1738010868802,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n    m-="],[-1,"1"],[1,"0.05"],[0,"\n    led"]],"start1":81,"start2":81,"length1":17,"length2":20},{"diffs":[[0,"m=5 "],[-1,"//this is what isn't working"],[1,"."],[0,"  \n "]],"start1":138,"start2":138,"length1":36,"length2":9}]}]},{"timestamp":1738011445538,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  all()\n"],[1,"        monster()\n"],[0,"    }\n  "]],"start1":1480,"start2":1480,"length1":16,"length2":34}]}]},{"timestamp":1738082806397,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  }\n"],[-1,"    \n"],[0,"    "]],"start1":1490,"start2":1490,"length1":13,"length2":8}]}]},{"timestamp":1738082807777,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"= 0\n"],[-1,"let score = 0\n"],[0,"func"]],"start1":36,"start2":36,"length1":22,"length2":8},{"diffs":[[0," m-="],[-1,"0.05"],[1,"1"],[0,"\n   "]],"start1":85,"start2":85,"length1":12,"length2":9},{"diffs":[[0,"g  \n"],[-1,"        monster()\n        score+=1\n"],[0,"    "]],"start1":166,"start2":166,"length1":43,"length2":8},{"diffs":[[0,"e){\n"],[-1,"    a=1\n"],[0,"    "]],"start1":896,"start2":896,"length1":16,"length2":8},{"diffs":[[0,"    "],[-1,"basic.showNumber(score)"],[1,"a=1"],[0,"\n   "]],"start1":1096,"start2":1096,"length1":31,"length2":11},{"diffs":[[0,"    "],[1,"}\n"],[0,"    "],[-1,"monster()\n    }"],[0,"\n   "]],"start1":1488,"start2":1488,"length1":27,"length2":14}]}]},{"timestamp":1738083225595,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," = 4"],[-1," //y movement of the player\nlet x = 2 //x movement of the player\nlet m = 5 //x movement of the monster\nlet a = 0 //stoping everything"],[1,"\nlet x = 2\nlet m = 5\nlet a = 0"],[0,"\nlet"]],"start1":5,"start2":5,"length1":141,"length2":38},{"diffs":[[0," = 0"],[-1," //score"],[0,"\nfun"]],"start1":49,"start2":49,"length1":16,"length2":8},{"diffs":[[0,"() {"],[-1," //monster's function\n    led.unplot(m, 4) //unploting the monster to move it\n    m-=0.05 //monsters speed\n    led.plot(m, 4) //ploting the monster after unploting\n    if (m < -1){//looping the monster\n        m=5 //resetting the monsters x"],[1,"\n    led.unplot(m, 4)\n    m-=0.05\n    led.plot(m, 4)\n    if (m < -1){\n        m=5 //this is what isn't working "],[0," \n  "]],"start1":70,"start2":70,"length1":248,"length2":119},{"diffs":[[0,"er()"],[-1,"//making sure t"],[0,"\n   "]],"start1":200,"start2":200,"length1":23,"length2":8},{"diffs":[[0," `)\n"],[-1,"    pause(1000)\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n    pause(500)\n"],[0,"    "]],"start1":1152,"start2":1152,"length1":137,"length2":8},{"diffs":[[0,"  })\n}\n\n"],[1,"\n"],[0,"basic.fo"]],"start1":1502,"start2":1502,"length1":16,"length2":17}]}]},{"timestamp":1738083712539,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"re t"],[-1,"he death tri"],[0,"\n   "]],"start1":455,"start2":455,"length1":20,"length2":8}]}]},{"timestamp":1738085007708,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," tri"],[-1,"gger doesn"],[0,"\n   "]],"start1":467,"start2":467,"length1":18,"length2":8}]}]},{"timestamp":1738085010104,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"oesn"],[-1,"'t trigger"],[0,"\n   "]],"start1":477,"start2":477,"length1":18,"length2":8},{"diffs":[[0,"e+=1"],[-1," //adding to the score"],[0,"\n   "]],"start1":494,"start2":494,"length1":30,"length2":8},{"diffs":[[0,"h(){"],[-1,"//testing and putting out the death effect"],[0,"\n"],[1," "],[0,"   i"]],"start1":520,"start2":520,"length1":51,"length2":10},{"diffs":[[0,"    "],[-1,"//up above is the way to long death check\n    a=1 //stopping everthing\n    //clearing the screen down below"],[1,"a=1"],[0,"\n   "]],"start1":1229,"start2":1229,"length1":115,"length2":11},{"diffs":[[0," `)\n"],[-1,"    //saying you died, down below\n"],[0,"    "]],"start1":1331,"start2":1331,"length1":42,"length2":8},{"diffs":[[0,"000)"],[-1,"//waiting\n    //clearing the screen again, down below"],[0,"\n   "]],"start1":1444,"start2":1444,"length1":61,"length2":8},{"diffs":[[0,"500)"],[-1,"//waiting"],[0,"\n   "]],"start1":1557,"start2":1557,"length1":17,"length2":8},{"diffs":[[0,"ore)"],[-1,"//showing the score"],[0,"\n   "]],"start1":1585,"start2":1585,"length1":27,"length2":8},{"diffs":[[0,"() {"],[-1," //all the juicey stuff\n    led.plot(x, y)//making the player\n    input.onButtonPressed(Button.A, function () { //taking the button input\n        led.unplot(x, y)//unplotting the player to move it"],[1,"\n    led.plot(x, y)\n    input.onButtonPressed(Button.A, function () {\n        led.unplot(x, y)"],[0,"\n   "]],"start1":1610,"start2":1610,"length1":204,"length2":102},{"diffs":[[0,"-= 2"],[-1," //jumping up"],[0,"\n   "]],"start1":1719,"start2":1719,"length1":21,"length2":8},{"diffs":[[0,"4) {"],[-1," //if its in bounds"],[0,"\n   "]],"start1":1749,"start2":1749,"length1":27,"length2":8},{"diffs":[[0,"use(500)"],[-1,"//wait"],[0,"\n       "]],"start1":1768,"start2":1768,"length1":22,"length2":16},{"diffs":[[0,"ot(x, y)"],[-1,"//unplot to move"],[0,"\n       "]],"start1":1797,"start2":1797,"length1":32,"length2":16},{"diffs":[[0,"      y += 1"],[-1," //fall down"],[0,"\n           "]],"start1":1812,"start2":1812,"length1":36,"length2":24},{"diffs":[[0,"500)"],[-1," //wait"],[0,"\n   "]],"start1":1843,"start2":1843,"length1":15,"length2":8},{"diffs":[[0,", y)"],[-1," //unplot to move"],[0,"\n   "]],"start1":1872,"start2":1872,"length1":25,"length2":8},{"diffs":[[0,"+= 1"],[-1," //fall down\n            pause(500) //preventing double jump"],[0,"\n   "]],"start1":1891,"start2":1891,"length1":68,"length2":8},{"diffs":[[0,"=0){"],[-1," //making sure we are dead\n        all() //running everthing about the player\n        monster() //running everthing about the monster\n    }\n    death() //checking for death"],[1,"\n        all()\n        monster()\n    }\n    death()"],[0,"\n})"]],"start1":1954,"start2":1954,"length1":179,"length2":57}]}]},{"timestamp":1738085517128,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," })\n"],[-1,"    \n"],[0,"}\n\nb"]],"start1":2453,"start2":2453,"length1":13,"length2":8}]}]},{"timestamp":1738093315528,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," })\n    "],[-1,"input.on"],[0,"\n}\n\nbasi"]],"start1":2453,"start2":2453,"length1":24,"length2":16}]}]},{"timestamp":1738093318425,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"h effect\n   "],[-1," "],[0,"if (led.poin"]],"start1":590,"start2":590,"length1":25,"length2":24},{"diffs":[[0,"  }\n"],[-1,"    if (led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == false && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == true && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false || led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == false && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == true) {\n        //up above is the way to long death check\n        a = 1 //stopping everthing\n        //clearing the screen down below\n        basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n        //saying you died, down below\n        basic.showLeds(`\n    # . . . #\n    . # . # .\n    . . # . .\n    . # . # .\n    # . . . #\n    `)\n        pause(1000)//waiting\n        //clearing the screen again, down below\n        basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n        pause(500)//waiting\n        basic.showNumber(score)//showing the score\n    }\n    if (led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == true && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false || led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == false && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == true && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false || led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == false && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == true) {\n        //up above is the way to long death check\n        a = 1 //stopping everthing\n        //clearing the screen down below\n        basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n        //saying you died, down below\n        basic.showLeds(`\n    # . . . #\n    . # . # .\n    . . # . .\n    . # . # .\n    # . . . #\n    `)\n        pause(1000)//waiting\n        //clearing the screen again, down below\n        basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n        pause(500)//waiting\n        basic.showNumber(score)//showing the score\n    }\n"],[0,"}\nfu"]],"start1":1884,"start2":1884,"length1":4773,"length2":8},{"diffs":[[0,"t.on"],[-1,"ButtonPressed(Button.B, function(){\n        led.unplot(x,y)\n        x++\n        led.plot(x,y)\n    })"],[0,"\n}\n\n"]],"start1":2465,"start2":2465,"length1":108,"length2":8}]}]},{"timestamp":1738093907681,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ger\n"],[-1,"        if (x==2){\n"],[0,"    "]],"start1":488,"start2":488,"length1":27,"length2":8},{"diffs":[[0,"ore\n"],[-1,"        }\n        if (x == 3) {\n            score += 2 //adding to the score\n        }\n        if (x == 4) {\n            score += 3 //adding to the score\n        }\n"],[0,"    "]],"start1":527,"start2":527,"length1":172,"length2":8},{"diffs":[[0,"    "],[-1,"pause(2000)\n    basic.showString(\"Press AB\")\n    }\n    if ("],[1,"}\n    if (led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == false && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == true && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false || "],[0,"led."]],"start1":1883,"start2":1883,"length1":67,"length2":715},{"diffs":[[0,".point(3, 4) == "],[-1,"tru"],[1,"fals"],[0,"e && led.point(4"]],"start1":3127,"start2":3127,"length1":35,"length2":36},{"diffs":[[0,", 4) == "],[-1,"fals"],[1,"tru"],[0,"e) {\n   "]],"start1":3275,"start2":3275,"length1":20,"length2":19},{"diffs":[[0,"d.point(2, 4) =="],[1," true && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false || led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == false && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == true && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false || led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) =="],[0," false && led.po"]],"start1":4323,"start2":4323,"length1":32,"length2":1426},{"diffs":[[0,",y)\n"],[-1,"        if (x>4){\n            x=4\n        }\n"],[0,"    "]],"start1":7325,"start2":7325,"length1":52,"length2":8}]}]},{"timestamp":1738094503664,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"input.onButtonPressed(Button.AB, function(){\n        basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n        a = 0\n        x = 2\n        m = 4\n    }"],[1,"pause(2000)\n    basic.showString(\"Press AB\""],[0,")\n  "]],"start1":2066,"start2":2066,"length1":202,"length2":51},{"diffs":[[0,"ore\n"],[-1,"        input.onButtonPressed(Button.AB, function () {\n            basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n            a = 0\n            x = 2\n            m = 4\n        })\n"],[0,"    "]],"start1":3448,"start2":3448,"length1":234,"length2":8},{"diffs":[[0,"e(500)//waiting\n"],[1,""],[0,"        basic.sh"]],"start1":4722,"start2":4722,"length1":32,"length2":32},{"diffs":[[0,"ore\n"],[-1,"        input.onButtonPressed(Button.AB, function () {\n            basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n            a = 0\n            x = 2\n            m = 4\n        })\n"],[0,"    "]],"start1":4785,"start2":4785,"length1":234,"length2":8}]}]},{"timestamp":1738095224448,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"\n"],[0,"let y = 4 //"]],"start1":0,"start2":0,"length1":13,"length2":12}]}]},{"timestamp":1738095347906,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":114}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"/*\nRead Me:\n    Press A to jump\n    Press B to move forward\n    Press AB to reset but only in the death screen or\nelse it will break the game\n    Your score will go up more the closer you are to\nthe monster spawn\n    Try to get over 100!\n    This game is made in Make Code that is very limited\nso bear with me.\n*/"],[0,"\nlet"]],"start1":0,"start2":0,"length1":317,"length2":4}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":223,"start2":223,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1737995279736,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"game\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1738007864607,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"let y = 4\nlet x = 2\nlet m = 5\nlet a = 0\nfunction monster() {\n    led.unplot(m, 4)\n    m-=0.05\n    led.plot(m, 4)\n    if (m < -1){\n        m=5\n    }\n}\nfunction death(){\n    if (){\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . # . .\n    . . . . .\n    . . . . .\n    `)\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n    basic.showLeds(`\n    # . . . #\n    . # . # .\n    . . # . .\n    . # . # .\n    # . . . #\n    `)\n    a=1\n    }\n}\n\nbasic.forever(function () {\n    if (a==0){\n        all()\n    }\n    function all () {\n    led.plot(x,y)\n    led.plot(m,4)\n    input.onButtonPressed(Button.A, function(){\n        led.unplot(x, y)\n        y-=2\n        if (y > 0 && y < 4) {\n            pause(500)\n            led.unplot(x, y)\n            y+=1\n            pause(500)\n            led.unplot(x,y)\n            y+=1\n        }\n    })\n    monster()\n    death()\n    }\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"game\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1738009748419,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"let y = 4\nlet x = 2\nlet m = 5\nlet a = 0\nfunction monster() {\n    //led.unplot(m, 4)\n    //m-=0.05\n    //led.plot(m, 4)\n    if (m < 0){\n        m=5    \n    }\n}\nfunction death(){\n    if (led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == true && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false){\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n    basic.showLeds(`\n    # . . . #\n    . # . # .\n    . . # . .\n    . # . # .\n    # . . . #\n    `)\n    a=1\n    }\n}\n\nbasic.forever(function () {\n    if (a==0){\n        all()\n    }\n    function all () {\n    led.plot(x,y)\n    led.plot(m,4)\n    led.unplot(m, 4)\n    m -= 0.05\n    led.plot(m, 4)\n    input.onButtonPressed(Button.A, function(){\n        led.unplot(x, y)\n        y-=2\n        if (y > 0 && y < 4) {\n            pause(500)\n            led.unplot(x, y)\n            y+=1\n            pause(500)\n            led.unplot(x,y)\n            y+=1\n        }\n    })\n    monster()\n    death()\n    }\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"game\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1738082806397,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"let y = 4\nlet x = 2\nlet m = 5\nlet a = 0\nfunction monster() {\n    led.unplot(m, 4)\n    m-=1\n    led.plot(m, 4)\n    if (m < -1){\n        m=5 //this is what isn't working  \n    }\n}\nfunction death(){\n    if (led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == true && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false){\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n    basic.showLeds(`\n    # . . . #\n    . # . # .\n    . . # . .\n    . # . # .\n    # . . . #\n    `)\n    a=1\n    }\n}\nfunction all() {\n    led.plot(x, y)\n    input.onButtonPressed(Button.A, function () {\n        led.unplot(x, y)\n        y -= 2\n        if (y > 0 && y < 4) {\n            pause(500)\n            led.unplot(x, y)\n            y += 1\n            pause(500)\n            led.unplot(x, y)\n            y += 1\n        }\n    })\n}\n\n\nbasic.forever(function () {\n    if (a==0){\n        all()\n        monster()\n    }\n    death()\n})","README.md":"","pxt.json":"{\n    \"name\": \"game\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1738085007708,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"let y = 4 //y movement of the player\nlet x = 2 //x movement of the player\nlet m = 5 //x movement of the monster\nlet a = 0 //stoping everything\nlet score = 0 //score\nfunction monster() { //monster's function\n    led.unplot(m, 4) //unploting the monster to move it\n    m-=0.05 //monsters speed\n    led.plot(m, 4) //ploting the monster after unploting\n    if (m < -1){//looping the monster\n        m=5 //resetting the monsters x \n        monster()//making sure t\n        score+=1\n    }\n}\nfunction death(){\n    if (led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == true && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false){\n    a=1\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n    basic.showLeds(`\n    # . . . #\n    . # . # .\n    . . # . .\n    . # . # .\n    # . . . #\n    `)\n    pause(1000)\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n    pause(500)\n    basic.showNumber(score)\n    }\n}\nfunction all() {\n    led.plot(x, y)\n    input.onButtonPressed(Button.A, function () {\n        led.unplot(x, y)\n        y -= 2\n        if (y > 0 && y < 4) {\n            pause(500)\n            led.unplot(x, y)\n            y += 1\n            pause(500)\n            led.unplot(x, y)\n            y += 1\n        }\n    })\n}\n\nbasic.forever(function () {\n    if (a==0){\n        all()\n        monster()\n    }\n    death()\n})","README.md":"","pxt.json":"{\n    \"name\": \"game\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1738093315528,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"let y = 4 //y movement of the player\nlet x = 2 //x movement of the player\nlet m = 5 //x movement of the monster\nlet a = 0 //stoping everything\nlet score = 0 //score\nfunction monster() { //monster's function\n    led.unplot(m, 4) //unploting the monster to move it\n    m-=0.05 //monsters speed\n    led.plot(m, 4) //ploting the monster after unploting\n    if (m < -1){//looping the monster\n        m=5 //resetting the monsters x \n        monster()//making sure the death trigger doesn't trigger\n        score+=1 //adding to the score\n    }\n}\nfunction death(){//testing and putting out the death effect\n   if (led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == true && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false){\n    //up above is the way to long death check\n    a=1 //stopping everthing\n    //clearing the screen down below\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n    //saying you died, down below\n    basic.showLeds(`\n    # . . . #\n    . # . # .\n    . . # . .\n    . # . # .\n    # . . . #\n    `)\n    pause(1000)//waiting\n    //clearing the screen again, down below\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n    pause(500)//waiting\n    basic.showNumber(score)//showing the score\n    }\n}\nfunction all() { //all the juicey stuff\n    led.plot(x, y)//making the player\n    input.onButtonPressed(Button.A, function () { //taking the button input\n        led.unplot(x, y)//unplotting the player to move it\n        y -= 2 //jumping up\n        if (y > 0 && y < 4) { //if its in bounds\n            pause(500)//wait\n            led.unplot(x, y)//unplot to move\n            y += 1 //fall down\n            pause(500) //wait\n            led.unplot(x, y) //unplot to move\n            y += 1 //fall down\n            pause(500) //preventing double jump\n        }\n    })\n}\n\nbasic.forever(function () {\n    if (a==0){ //making sure we are dead\n        all() //running everthing about the player\n        monster() //running everthing about the monster\n    }\n    death() //checking for death\n})","README.md":"","pxt.json":"{\n    \"name\": \"game\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1738095145707,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"let y = 4 //y movement of the player\nlet x = 2 //x movement of the player\nlet m = 5 //x movement of the monster\nlet a = 0 //stoping everything\nlet score = 0 //score\nfunction monster() { //monster's function\n    led.unplot(m, 4) //unploting the monster to move it\n    m-=0.05 //monsters speed\n    led.plot(m, 4) //ploting the monster after unploting\n    if (m < -1){//looping the monster\n        m=5 //resetting the monsters x \n        monster()//making sure the death trigger doesn't trigger\n        if (x==2){\n        score+=1 //adding to the score\n        }\n        if (x == 3) {\n            score += 2 //adding to the score\n        }\n        if (x == 4) {\n            score += 3 //adding to the score\n        }\n    }\n}\nfunction death(){//testing and putting out the death effect\n    if (led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == true && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false){\n    //up above is the way to long death check\n    a=1 //stopping everthing\n    //clearing the screen down below\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n    //saying you died, down below\n    basic.showLeds(`\n    # . . . #\n    . # . # .\n    . . # . .\n    . # . # .\n    # . . . #\n    `)\n    pause(1000)//waiting\n    //clearing the screen again, down below\n    basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n    pause(500)//waiting\n    basic.showNumber(score)//showing the score\n    input.onButtonPressed(Button.AB, function(){\n        basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n        a = 0\n        x = 2\n        m = 4\n    })\n    }\n    if (led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == false && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == true && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false) {\n        //up above is the way to long death check\n        a = 1 //stopping everthing\n        //clearing the screen down below\n        basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n        //saying you died, down below\n        basic.showLeds(`\n    # . . . #\n    . # . # .\n    . . # . .\n    . # . # .\n    # . . . #\n    `)\n        pause(1000)//waiting\n        //clearing the screen again, down below\n        basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n        pause(500)//waiting\n        basic.showNumber(score)//showing the score\n        input.onButtonPressed(Button.AB, function () {\n            basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n            a = 0\n            x = 2\n            m = 4\n        })\n    }\n    if (led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == false && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == true) {\n        //up above is the way to long death check\n        a = 1 //stopping everthing\n        //clearing the screen down below\n        basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n        //saying you died, down below\n        basic.showLeds(`\n    # . . . #\n    . # . # .\n    . . # . .\n    . # . # .\n    # . . . #\n    `)\n        pause(1000)//waiting\n        //clearing the screen again, down below\n        basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n        pause(500)//waiting\n        basic.showNumber(score)//showing the score\n        input.onButtonPressed(Button.AB, function () {\n            basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n            a = 0\n            x = 2\n            m = 4\n        })\n    }\n}\nfunction all() { //all the juicey stuff\n    led.plot(x, y)//making the player\n    input.onButtonPressed(Button.A, function () { //taking the button input\n        led.unplot(x, y)//unplotting the player to move it\n        y -= 2 //jumping up\n        if (y > 0 && y < 4) { //if its in bounds\n            pause(500)//wait\n            led.unplot(x, y)//unplot to move\n            y += 1 //fall down\n            pause(500) //wait\n            led.unplot(x, y) //unplot to move\n            y += 1 //fall down\n            pause(500) //preventing double jump\n        }\n    })\n    input.onButtonPressed(Button.B, function(){\n        led.unplot(x,y)\n        x++\n        led.plot(x,y)\n        if (x>4){\n            x=4\n        }\n    })\n}\n\nbasic.forever(function () {\n    if (a==0){ //making sure we are dead\n        all() //running everthing about the player\n        monster() //running everthing about the monster\n    }\n    death() //checking for death\n})","README.md":"","pxt.json":"{\n    \"name\": \"game\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1738095224254,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"bLpE*jScAl#53HB#eocI\">m</variable><variable id=\"ZZOljRAs:X:bd9n,J@=q\">x</variable><variable id=\"=7L$vzKUBZt^:l~nCaQ3\">score</variable><variable id=\"k3S1IE-ur^qH#+@)qqYM\">a</variable><variable id=\"cR,.?5z@L6+U9[f4@9HS\">y</variable></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"let a = 0\" numlines=\"1\" declaredvars=\"a\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">stoping everything</comment><next><block type=\"variables_set\"><field name=\"VAR\" id=\"cR,.?5z@L6+U9[f4@9HS\">y</field><comment pinned=\"false\" h=\"80\" w=\"160\">y movement of the player</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"ZZOljRAs:X:bd9n,J@=q\">x</field><comment pinned=\"false\" h=\"80\" w=\"160\">x movement of the player</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"bLpE*jScAl#53HB#eocI\">m</field><comment pinned=\"false\" h=\"80\" w=\"160\">x movement of the monster</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">5</field></shadow></value></block></next></block></next></block></next></block></statement></block><block type=\"device_forever\" x=\"282\" y=\"20\"><statement name=\"HANDLER\"><block type=\"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"k3S1IE-ur^qH#+@)qqYM\">a</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"function_call\"><mutation name=\"all\" functionid=\"P5[vEXonEbH7gIoHg98!\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">making sure we are dead\nrunning everthing about the player</comment><next><block type=\"function_call\"><mutation name=\"monster\" functionid=\"l1#K1GyR*OSlD9P!`7Z2\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">running everthing about the monster</comment></block></next></block></statement><next><block type=\"function_call\"><mutation name=\"death\" functionid=\"~Z?(=3nX$(|M$:[3b;~A\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">checking for death</comment></block></next></block></statement></block><block type=\"function_definition\" x=\"651\" y=\"20\"><mutation name=\"monster\" functionid=\"l1#K1GyR*OSlD9P!`7Z2\"></mutation><field name=\"function_name\">monster</field><comment pinned=\"false\" h=\"80\" w=\"160\">score</comment><statement name=\"STACK\"><block type=\"device_unplot\"><comment pinned=\"false\" h=\"80\" w=\"160\">monster's function\nunploting the monster to move it</comment><value name=\"x\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"bLpE*jScAl#53HB#eocI\">m</field></block></value><value name=\"y\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" precision=\"0\"></mutation><field name=\"SLIDER\">4</field></shadow></value><next><block type=\"variables_change\"><field name=\"VAR\" id=\"bLpE*jScAl#53HB#eocI\">m</field><comment pinned=\"false\" h=\"80\" w=\"160\">monsters speed</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"math_arithmetic\"><field name=\"OP\">MINUS</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0.05</field></shadow></value></block></value><next><block type=\"device_plot\"><comment pinned=\"false\" h=\"80\" w=\"160\">ploting the monster after unploting</comment><value name=\"x\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"bLpE*jScAl#53HB#eocI\">m</field></block></value><value name=\"y\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" precision=\"0\"></mutation><field name=\"SLIDER\">4</field></shadow></value><next><block type=\"controls_if\"><data>{\"commentRefs\":[],\"fieldData\":{}}</data><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">LT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"bLpE*jScAl#53HB#eocI\">m</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">-1</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"variables_set\"><field name=\"VAR\" id=\"bLpE*jScAl#53HB#eocI\">m</field><comment pinned=\"false\" h=\"80\" w=\"160\">looping the monster\nresetting the monsters x</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"function_call\"><mutation name=\"monster\" functionid=\"l1#K1GyR*OSlD9P!`7Z2\"></mutation><data>{\"commentRefs\":[],\"fieldData\":{}}</data><next><block type=\"controls_if\"><comment pinned=\"false\" h=\"80\" w=\"160\">making sure the death trigger doesn't trigger</comment><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"ZZOljRAs:X:bd9n,J@=q\">x</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">2</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"variables_change\"><field name=\"VAR\" id=\"=7L$vzKUBZt^:l~nCaQ3\">score</field><comment pinned=\"false\" h=\"80\" w=\"160\">adding to the score</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"ZZOljRAs:X:bd9n,J@=q\">x</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">3</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"variables_change\"><field name=\"VAR\" id=\"=7L$vzKUBZt^:l~nCaQ3\">score</field><comment pinned=\"false\" h=\"80\" w=\"160\">adding to the score</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">2</field></shadow></value></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"ZZOljRAs:X:bd9n,J@=q\">x</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"variables_change\"><field name=\"VAR\" id=\"=7L$vzKUBZt^:l~nCaQ3\">score</field><comment pinned=\"false\" h=\"80\" w=\"160\">adding to the score</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">3</field></shadow></value></block></statement></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></statement></block><block type=\"function_definition\" x=\"1077\" y=\"20\"><mutation name=\"death\" functionid=\"~Z?(=3nX$(|M$:[3b;~A\"></mutation><field name=\"function_name\">death</field><statement name=\"STACK\"><block type=\"controls_if\"><comment pinned=\"false\" h=\"80\" w=\"160\">testing and putting out the death effect</comment><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"typescript_expression\"><field name=\"EXPRESSION\">led.point(0, 0) == false, led.point(0, 1) == false &amp;&amp; led.point(0, 2) == false &amp;&amp; led.point(0, 3) == false &amp;&amp; led.point(0, 4) == false &amp;&amp; led.point(1, 0) == false &amp;&amp; led.point(1, 1) == false &amp;&amp; led.point(1, 2) == false &amp;&amp; led.point(1, 3) == false &amp;&amp; led.point(1, 4) == false &amp;&amp; led.point(2, 0) == false &amp;&amp; led.point(2, 1) == false &amp;&amp; led.point(2, 2) == false &amp;&amp; led.point(2, 3) == false &amp;&amp; led.point(2, 4) == true &amp;&amp; led.point(3, 0) == false &amp;&amp; led.point(3, 1) == false &amp;&amp; led.point(3, 2) == false &amp;&amp; led.point(3, 3) == false &amp;&amp; led.point(3, 4) == false &amp;&amp; led.point(4, 0) == false &amp;&amp; led.point(4, 1) == false &amp;&amp; led.point(4, 2) == false &amp;&amp; led.point(4, 3) == false &amp;&amp; led.point(4, 4) == false</field></block></value><statement name=\"DO0\"><block type=\"variables_set\"><field name=\"VAR\" id=\"k3S1IE-ur^qH#+@)qqYM\">a</field><comment pinned=\"false\" h=\"80\" w=\"160\">up above is the way to long death check\nstopping everthing</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . . . . . \n        . . . . . \n        . . . . . \n        . . . . . \n        . . . . .\n        `</field><comment pinned=\"false\" h=\"80\" w=\"160\">clearing the screen down below</comment><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        # . . . # \n        . # . # . \n        . . # . . \n        . # . # . \n        # . . . #\n        `</field><comment pinned=\"false\" h=\"80\" w=\"160\">saying you died, down below</comment><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"pause(1000)\" numlines=\"1\"></mutation><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . . . . . \n        . . . . . \n        . . . . . \n        . . . . . \n        . . . . .\n        `</field><comment pinned=\"false\" h=\"80\" w=\"160\">waiting\nclearing the screen again, down below</comment><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"pause(500)\" numlines=\"1\"></mutation><next><block type=\"device_show_number\"><comment pinned=\"false\" h=\"80\" w=\"160\">waiting</comment><value name=\"number\"><block type=\"variables_get\"><field name=\"VAR\" id=\"=7L$vzKUBZt^:l~nCaQ3\">score</field></block></value><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"input.onButtonPressed(Button.AB, function(){\" line1=\"        basic.showLeds(`\" line2=\"    . . . . .\" line3=\"    . . . . .\" line4=\"    . . . . .\" line5=\"    . . . . .\" line6=\"    . . . . .\" line7=\"    `)\" line8=\"        a = 0\" line9=\"        x = 2\" line10=\"        m = 4\" line11=\"    })\" numlines=\"12\"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"typescript_expression\"><field name=\"EXPRESSION\">led.point(0, 0) == false, led.point(0, 1) == false &amp;&amp; led.point(0, 2) == false &amp;&amp; led.point(0, 3) == false &amp;&amp; led.point(0, 4) == false &amp;&amp; led.point(1, 0) == false &amp;&amp; led.point(1, 1) == false &amp;&amp; led.point(1, 2) == false &amp;&amp; led.point(1, 3) == false &amp;&amp; led.point(1, 4) == false &amp;&amp; led.point(2, 0) == false &amp;&amp; led.point(2, 1) == false &amp;&amp; led.point(2, 2) == false &amp;&amp; led.point(2, 3) == false &amp;&amp; led.point(2, 4) == false &amp;&amp; led.point(3, 0) == false &amp;&amp; led.point(3, 1) == false &amp;&amp; led.point(3, 2) == false &amp;&amp; led.point(3, 3) == false &amp;&amp; led.point(3, 4) == true &amp;&amp; led.point(4, 0) == false &amp;&amp; led.point(4, 1) == false &amp;&amp; led.point(4, 2) == false &amp;&amp; led.point(4, 3) == false &amp;&amp; led.point(4, 4) == false</field></block></value><statement name=\"DO0\"><block type=\"variables_set\"><field name=\"VAR\" id=\"k3S1IE-ur^qH#+@)qqYM\">a</field><comment pinned=\"false\" h=\"80\" w=\"160\">up above is the way to long death check\nstopping everthing</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . . . . . \n        . . . . . \n        . . . . . \n        . . . . . \n        . . . . .\n        `</field><comment pinned=\"false\" h=\"80\" w=\"160\">clearing the screen down below</comment><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        # . . . # \n        . # . # . \n        . . # . . \n        . # . # . \n        # . . . #\n        `</field><comment pinned=\"false\" h=\"80\" w=\"160\">saying you died, down below</comment><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"pause(1000)\" numlines=\"1\"></mutation><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . . . . . \n        . . . . . \n        . . . . . \n        . . . . . \n        . . . . .\n        `</field><comment pinned=\"false\" h=\"80\" w=\"160\">waiting\nclearing the screen again, down below</comment><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"pause(500)\" numlines=\"1\"></mutation><next><block type=\"device_show_number\"><comment pinned=\"false\" h=\"80\" w=\"160\">waiting</comment><value name=\"number\"><block type=\"variables_get\"><field name=\"VAR\" id=\"=7L$vzKUBZt^:l~nCaQ3\">score</field></block></value><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"input.onButtonPressed(Button.AB, function () {\" line1=\"            basic.showLeds(`\" line2=\"    . . . . .\" line3=\"    . . . . .\" line4=\"    . . . . .\" line5=\"    . . . . .\" line6=\"    . . . . .\" line7=\"    `)\" line8=\"            a = 0\" line9=\"            x = 2\" line10=\"            m = 4\" line11=\"        })\" numlines=\"12\"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"typescript_expression\"><field name=\"EXPRESSION\">led.point(0, 0) == false, led.point(0, 1) == false &amp;&amp; led.point(0, 2) == false &amp;&amp; led.point(0, 3) == false &amp;&amp; led.point(0, 4) == false &amp;&amp; led.point(1, 0) == false &amp;&amp; led.point(1, 1) == false &amp;&amp; led.point(1, 2) == false &amp;&amp; led.point(1, 3) == false &amp;&amp; led.point(1, 4) == false &amp;&amp; led.point(2, 0) == false &amp;&amp; led.point(2, 1) == false &amp;&amp; led.point(2, 2) == false &amp;&amp; led.point(2, 3) == false &amp;&amp; led.point(2, 4) == false &amp;&amp; led.point(3, 0) == false &amp;&amp; led.point(3, 1) == false &amp;&amp; led.point(3, 2) == false &amp;&amp; led.point(3, 3) == false &amp;&amp; led.point(3, 4) == false &amp;&amp; led.point(4, 0) == false &amp;&amp; led.point(4, 1) == false &amp;&amp; led.point(4, 2) == false &amp;&amp; led.point(4, 3) == false &amp;&amp; led.point(4, 4) == true</field></block></value><statement name=\"DO0\"><block type=\"variables_set\"><field name=\"VAR\" id=\"k3S1IE-ur^qH#+@)qqYM\">a</field><comment pinned=\"false\" h=\"80\" w=\"160\">up above is the way to long death check\nstopping everthing</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . . . . . \n        . . . . . \n        . . . . . \n        . . . . . \n        . . . . .\n        `</field><comment pinned=\"false\" h=\"80\" w=\"160\">clearing the screen down below</comment><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        # . . . # \n        . # . # . \n        . . # . . \n        . # . # . \n        # . . . #\n        `</field><comment pinned=\"false\" h=\"80\" w=\"160\">saying you died, down below</comment><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"pause(1000)\" numlines=\"1\"></mutation><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . . . . . \n        . . . . . \n        . . . . . \n        . . . . . \n        . . . . .\n        `</field><comment pinned=\"false\" h=\"80\" w=\"160\">waiting\nclearing the screen again, down below</comment><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"pause(500)\" numlines=\"1\"></mutation><next><block type=\"device_show_number\"><comment pinned=\"false\" h=\"80\" w=\"160\">waiting</comment><value name=\"number\"><block type=\"variables_get\"><field name=\"VAR\" id=\"=7L$vzKUBZt^:l~nCaQ3\">score</field></block></value><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"input.onButtonPressed(Button.AB, function () {\" line1=\"            basic.showLeds(`\" line2=\"    . . . . .\" line3=\"    . . . . .\" line4=\"    . . . . .\" line5=\"    . . . . .\" line6=\"    . . . . .\" line7=\"    `)\" line8=\"            a = 0\" line9=\"            x = 2\" line10=\"            m = 4\" line11=\"        })\" numlines=\"12\"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></statement></block><block type=\"function_definition\" x=\"1785\" y=\"20\"><mutation name=\"all\" functionid=\"P5[vEXonEbH7gIoHg98!\"></mutation><field name=\"function_name\">all</field><statement name=\"STACK\"><block type=\"device_plot\"><comment pinned=\"false\" h=\"80\" w=\"160\">all the juicey stuff</comment><value name=\"x\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"ZZOljRAs:X:bd9n,J@=q\">x</field></block></value><value name=\"y\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"cR,.?5z@L6+U9[f4@9HS\">y</field></block></value><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"input.onButtonPressed(Button.A, function () { //taking the button input\" line1=\"        led.unplot(x, y)//unplotting the player to move it\" line2=\"        y -= 2 //jumping up\" line3=\"        if (y &gt; 0 &amp;&amp; y &lt; 4) { //if its in bounds\" line4=\"            pause(500)//wait\" line5=\"            led.unplot(x, y)//unplot to move\" line6=\"            y += 1 //fall down\" line7=\"            pause(500) //wait\" line8=\"            led.unplot(x, y) //unplot to move\" line9=\"            y += 1 //fall down\" line10=\"            pause(500) //preventing double jump\" line11=\"        }\" line12=\"    })\" numlines=\"13\"></mutation><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"input.onButtonPressed(Button.B, function(){\" line1=\"        led.unplot(x,y)\" line2=\"        x++\" line3=\"        led.plot(x,y)\" line4=\"        if (x&gt;4){\" line5=\"            x=4\" line6=\"        }\" line7=\"    })\" numlines=\"8\"></mutation></block></next></block></next></block></statement></block></xml>","main.ts":"function all () {\n    // all the juicey stuff\n    led.plot(x, y)\n    input.onButtonPressed(Button.A, function () { //taking the button input\n        led.unplot(x, y)//unplotting the player to move it\n        y -= 2 //jumping up\n        if (y > 0 && y < 4) { //if its in bounds\n            pause(500)//wait\n            led.unplot(x, y)//unplot to move\n            y += 1 //fall down\n            pause(500) //wait\n            led.unplot(x, y) //unplot to move\n            y += 1 //fall down\n            pause(500) //preventing double jump\n        }\n    })\ninput.onButtonPressed(Button.B, function(){\n        led.unplot(x,y)\n        x++\n        led.plot(x,y)\n        if (x>4){\n            x=4\n        }\n    })\n}\nfunction death () {\n    // testing and putting out the death effect\n    if (led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == true && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false) {\n        // up above is the way to long death check\n        // stopping everthing\n        a = 1\n        // clearing the screen down below\n        basic.showLeds(`\n            . . . . .\n            . . . . .\n            . . . . .\n            . . . . .\n            . . . . .\n            `)\n        // saying you died, down below\n        basic.showLeds(`\n            # . . . #\n            . # . # .\n            . . # . .\n            . # . # .\n            # . . . #\n            `)\n        pause(1000)\n// waiting\n        // clearing the screen again, down below\n        basic.showLeds(`\n            . . . . .\n            . . . . .\n            . . . . .\n            . . . . .\n            . . . . .\n            `)\n        pause(500)\n// waiting\n        basic.showNumber(score)\n        input.onButtonPressed(Button.AB, function(){\n        basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n        a = 0\n        x = 2\n        m = 4\n    })\n    }\n    if (led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == false && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == true && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == false) {\n        // up above is the way to long death check\n        // stopping everthing\n        a = 1\n        // clearing the screen down below\n        basic.showLeds(`\n            . . . . .\n            . . . . .\n            . . . . .\n            . . . . .\n            . . . . .\n            `)\n        // saying you died, down below\n        basic.showLeds(`\n            # . . . #\n            . # . # .\n            . . # . .\n            . # . # .\n            # . . . #\n            `)\n        pause(1000)\n// waiting\n        // clearing the screen again, down below\n        basic.showLeds(`\n            . . . . .\n            . . . . .\n            . . . . .\n            . . . . .\n            . . . . .\n            `)\n        pause(500)\n// waiting\n        basic.showNumber(score)\n        input.onButtonPressed(Button.AB, function () {\n            basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n            a = 0\n            x = 2\n            m = 4\n        })\n    }\n    if (led.point(0, 0) == false, led.point(0, 1) == false && led.point(0, 2) == false && led.point(0, 3) == false && led.point(0, 4) == false && led.point(1, 0) == false && led.point(1, 1) == false && led.point(1, 2) == false && led.point(1, 3) == false && led.point(1, 4) == false && led.point(2, 0) == false && led.point(2, 1) == false && led.point(2, 2) == false && led.point(2, 3) == false && led.point(2, 4) == false && led.point(3, 0) == false && led.point(3, 1) == false && led.point(3, 2) == false && led.point(3, 3) == false && led.point(3, 4) == false && led.point(4, 0) == false && led.point(4, 1) == false && led.point(4, 2) == false && led.point(4, 3) == false && led.point(4, 4) == true) {\n        // up above is the way to long death check\n        // stopping everthing\n        a = 1\n        // clearing the screen down below\n        basic.showLeds(`\n            . . . . .\n            . . . . .\n            . . . . .\n            . . . . .\n            . . . . .\n            `)\n        // saying you died, down below\n        basic.showLeds(`\n            # . . . #\n            . # . # .\n            . . # . .\n            . # . # .\n            # . . . #\n            `)\n        pause(1000)\n// waiting\n        // clearing the screen again, down below\n        basic.showLeds(`\n            . . . . .\n            . . . . .\n            . . . . .\n            . . . . .\n            . . . . .\n            `)\n        pause(500)\n// waiting\n        basic.showNumber(score)\n        input.onButtonPressed(Button.AB, function () {\n            basic.showLeds(`\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    . . . . .\n    `)\n            a = 0\n            x = 2\n            m = 4\n        })\n    }\n}\n// score\nfunction monster () {\n    // monster's function\n    // unploting the monster to move it\n    led.unplot(m, 4)\n    // monsters speed\n    m += 0 - 0.05\n    // ploting the monster after unploting\n    led.plot(m, 4)\n    if (m < -1) {\n        // looping the monster\n        // resetting the monsters x\n        m = 5\n        monster()\n        // making sure the death trigger doesn't trigger\n        if (x == 2) {\n            // adding to the score\n            score += 1\n        }\n        if (x == 3) {\n            // adding to the score\n            score += 2\n        }\n        if (x == 4) {\n            // adding to the score\n            score += 3\n        }\n    }\n}\nlet score = 0\nlet m = 0\nlet x = 0\nlet y = 0\n// stoping everything\nlet a = 0\n// y movement of the player\ny = 4\n// x movement of the player\nx = 2\n// x movement of the monster\nm = 5\nbasic.forever(function () {\n    if (a == 0) {\n        // making sure we are dead\n        // running everthing about the player\n        all()\n        // running everthing about the monster\n        monster()\n    }\n    // checking for death\n    death()\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"game\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1738095599204}